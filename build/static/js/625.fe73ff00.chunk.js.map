{"version":3,"file":"static/js/625.fe73ff00.chunk.js","mappings":"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","sources":["assets/icons/arrow.svg","assets/icons/smiley.svg","app/_service/user-api.tsx","app/_shared/components/app-popover/popover-component.tsx","app/_shared/components/app-profile-details/profile-details.tsx","assets/icons/Shape.svg","app/_shared/components/search-bar/search-bar.tsx","app/_shared/components/report-list/report-list.tsx","app/_shared/components/button/button.tsx","app/_shared/components/segment/segment.tsx","assets/icons/likes.svg","assets/icons/comments.svg","assets/icons/repost.svg","app/enum/ReportEnum.tsx","app/_shared/components/image-previewer/image-Previewer.tsx","app/_shared/components/comments-viewer/comments-viewer.tsx","app/enum/data-types.tsx","app/_shared/components/app-post-detailed-view/post-detailed-view.tsx","app/_shared/components/report-view/report-view.tsx","app/_shared/components/user-profile-card/user-profile-card.tsx","app/pages/report/flagged-report.tsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.7571 18C11.3757 18 11.8138 17.4673 12.1318 16.6425L17.7594 1.94176C17.914 1.54654 18 1.19427 18 0.902147C18 0.343671 17.6563 0 17.0978 0C16.8057 0 16.4535 0.0859221 16.0583 0.240575L1.28019 5.90262C0.558473 6.17756 0 6.61575 0 7.24295C0 8.03344 0.601432 8.29976 1.42625 8.54892L6.06587 9.95802C6.61575 10.1299 6.92505 10.1126 7.29451 9.76895L16.7198 0.96229C16.8315 0.859186 16.9603 0.876368 17.0463 0.953695C17.1322 1.03962 17.1408 1.16849 17.0377 1.28019L8.26539 10.7398C7.9303 11.0921 7.90453 11.3843 8.06777 11.9599L9.43392 16.4964C9.69162 17.3642 9.95802 18 10.7571 18Z\",\n    fill: \"#8E8E8E\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/arrow.5bf555d7dc1150a93a0ff08befa46dbb.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSmiley(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.5 9C13.9167 9 14.2708 8.85417 14.5625 8.5625C14.8542 8.27083 15 7.91667 15 7.5C15 7.08333 14.8542 6.72917 14.5625 6.4375C14.2708 6.14583 13.9167 6 13.5 6C13.0833 6 12.7292 6.14583 12.4375 6.4375C12.1458 6.72917 12 7.08333 12 7.5C12 7.91667 12.1458 8.27083 12.4375 8.5625C12.7292 8.85417 13.0833 9 13.5 9ZM6.5 9C6.91667 9 7.27083 8.85417 7.5625 8.5625C7.85417 8.27083 8 7.91667 8 7.5C8 7.08333 7.85417 6.72917 7.5625 6.4375C7.27083 6.14583 6.91667 6 6.5 6C6.08333 6 5.72917 6.14583 5.4375 6.4375C5.14583 6.72917 5 7.08333 5 7.5C5 7.91667 5.14583 8.27083 5.4375 8.5625C5.72917 8.85417 6.08333 9 6.5 9ZM10 20C8.61667 20 7.31667 19.7375 6.1 19.2125C4.88333 18.6875 3.825 17.975 2.925 17.075C2.025 16.175 1.3125 15.1167 0.7875 13.9C0.2625 12.6833 0 11.3833 0 10C0 8.61667 0.2625 7.31667 0.7875 6.1C1.3125 4.88333 2.025 3.825 2.925 2.925C3.825 2.025 4.88333 1.3125 6.1 0.7875C7.31667 0.2625 8.61667 0 10 0C11.3833 0 12.6833 0.2625 13.9 0.7875C15.1167 1.3125 16.175 2.025 17.075 2.925C17.975 3.825 18.6875 4.88333 19.2125 6.1C19.7375 7.31667 20 8.61667 20 10C20 11.3833 19.7375 12.6833 19.2125 13.9C18.6875 15.1167 17.975 16.175 17.075 17.075C16.175 17.975 15.1167 18.6875 13.9 19.2125C12.6833 19.7375 11.3833 20 10 20ZM10 18C12.2333 18 14.125 17.225 15.675 15.675C17.225 14.125 18 12.2333 18 10C18 7.76667 17.225 5.875 15.675 4.325C14.125 2.775 12.2333 2 10 2C7.76667 2 5.875 2.775 4.325 4.325C2.775 5.875 2 7.76667 2 10C2 12.2333 2.775 14.125 4.325 15.675C5.875 17.225 7.76667 18 10 18ZM10 15.5C10.9667 15.5 11.8583 15.2667 12.675 14.8C13.4917 14.3333 14.15 13.7 14.65 12.9C14.75 12.7 14.7417 12.5 14.625 12.3C14.5083 12.1 14.3333 12 14.1 12H5.9C5.66667 12 5.49167 12.1 5.375 12.3C5.25833 12.5 5.25 12.7 5.35 12.9C5.85 13.7 6.5125 14.3333 7.3375 14.8C8.1625 15.2667 9.05 15.5 10 15.5Z\",\n    fill: \"#8E8E8E\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSmiley);\nexport default __webpack_public_path__ + \"static/media/smiley.b003abd84f35e4dcba9c83778c79d826.svg\";\nexport { ForwardRef as ReactComponent };","import { User } from \"../_models/user\";\nimport http from \"../_core/helpers/axios/axios-instance\";\nimport { ReportAttachments, ReportDetail, ReportedList } from \"../_models/report\";\n\nconst GET_USER = '/user/me';\nconst GET_REPORTED_LIST = '/support/reports';\nconst GET_REPORT_DETAILS = '/support/reports/:reportId'\nconst USER_WITH_ID = `/user/:id`;\nconst GET_POST_BY_ID = '/support/reports/:reportId';\nconst SAVE_REPORT = '/support/reports';\nconst GET_COMMENTS = '/comments';\nconst GET_USERS_WITH_ID = '/user/list';\n\nconst getUser = () => {\n    return http.get<Array<User>>(GET_USER);\n};\n\nconst getReportList = (status: number, type: number, searchTerm?: string) => {\n\n    interface Params {\n        status: number;\n        type: number;\n        searchTerm?: string | null;\n    }\n\n    const params: Params = {\n        status,\n        type\n    }\n\n    if (searchTerm) params.searchTerm = searchTerm;\n    return http.get<ReportedList[]>(GET_REPORTED_LIST, { params })\n}\n\nconst fetchDetailsByReportId = (reportId: number) => {\n    let url = GET_POST_BY_ID.replace(':reportId', reportId.toString());\n    return http.get<ReportDetail>(url);\n}\n\nconst saveReport = (reportId: number, attachment: ReportAttachments) => {\n    const attachments: ReportAttachments = { action: attachment.action }\n    if (attachment.comments) attachments.comments = attachment.comments\n    return http.put<ReportDetail>(SAVE_REPORT, {\n        reportId,\n        attachments\n    });\n}\n\nconst getCommentsByPostId = (postId: number) => {\n    return http.get(GET_COMMENTS, {\n        params: { postId }\n    });\n}\n\nconst getUserById = (userId: number) => {\n    if (userId) {\n        let url = USER_WITH_ID.replace(':id', userId.toString());\n        return http.get<any>(url)\n    }\n}\n\nconst getUserList = (payload: number[]) => {\n    return http.post<User[]>(GET_USERS_WITH_ID, { 'ids': payload })\n}\n\nconst UserService = {\n    getUser,\n    getReportList,\n    fetchDetailsByReportId,\n    saveReport,\n    getCommentsByPostId,\n    getUserById,\n    getUserList\n};\n\nexport default UserService;\n","import { Box, Fade, Popover, Popper } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport \"../../components/app-popover/popover-component.scss\"\n\ninterface PopoverContentProps {\n    open: boolean;\n    anchorEl: HTMLElement | null;\n    closePopover: () => void;\n    configData: Options[];\n    selectedData: (ev: Options) => void;\n}\n\nexport interface Options {\n    id: number;\n    text: string;\n}\n\n\nconst PopoverComponent: React.FC<PopoverContentProps> = ({ open, anchorEl, closePopover, configData, selectedData }) => {\n    const [menuOption, setMenuOption] = useState<Options[]>([{\n        id: 0,\n        text: ''\n    }])\n\n    useEffect(() => {\n        setMenuOption(configData)\n    }, [])\n\n    const handleItemClick = (option: Options) => {   \n        selectedData(option);\n        closePopover()\n    };\n\n\n    return (\n        <Popover\n            id={'id'}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={closePopover}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            classes = {{paper: 'popover_content'}}\n        >{\n\n            }\n            <div className=\"moreOptions\">\n                <ul className=\"list-Container\">\n                    {menuOption.map((option: Options, index: number) => {\n                        return <li className=\"list-item\"key={index} onClick={() => handleItemClick(option)}>{option.text}</li>\n                    })}\n                </ul>\n\n            </div>\n            \n        </Popover>\n    );\n\n};\n\nexport default PopoverComponent;","import { Avatar, Chip, Grid, Typography } from \"@mui/material\";\nimport './profile-details.scss';\nimport { useEffect, useState } from \"react\";\nimport UserService from \"../../../_service/user-api\";\nimport { Logger } from \"../../../_core/logger.service\";\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\nimport { Box, Skeleton } from '@mui/material';\n\nconst logger = new Logger();\n\ninterface PropsForProfile {\n    id: number\n}\n\ninterface UserDetails {\n    id: number;\n    displayName: string | null;\n    name: string;\n    interests: string[] | [];\n    profilePic: string;\n    displayLocationName: string | null;\n    status: {\n        text: string | null\n    }\n}\n\nconst popularity = [\n    { text: 'Posts', value: 0 },\n    { text: 'Briefcase', value: 12 },\n    { text: 'Interests', value: 4 }\n]\n\nconst details = [\n    { text: 'Account reported', value: '12 reports' },\n    { text: 'Account warnings', value: '26 warnings' },\n    { text: 'Reports raised', value: '2 reports' },\n]\n\nexport const ProfileDetails = (props: PropsForProfile) => {\n    const [userInfo, setUserInfo] = useState<UserDetails>({\n        id: 0,\n        displayName: null,\n        name: '',\n        interests: [],\n        profilePic: '',\n        displayLocationName: null,\n        status: {\n            text: null\n        }\n    })\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    const fetchData = async () => {\n        try {\n            const res: any = await UserService.getUserById(props.id);\n            const { userDetails } = res;\n            setUserInfo({ ...userDetails });\n            setIsLoading(false)\n        } catch (err: any) {\n            logger.error(err.message);\n        }\n\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            {\n                isLoading ?\n                    <div>\n                        <Box>\n                            <Skeleton animation='wave' style={{ height: 40 }} />\n                            <div style={{ display: 'flex', marginTop: 30 }}>\n                                <Skeleton variant=\"circular\" width={120} height={120} />\n                                <div style={{ width: '70%', marginLeft: 20, alignContent: 'center' }}>\n                                    <Skeleton style={{ flexGrow: 1, height: 40 }} />\n                                    <Skeleton style={{ flexGrow: 1, height: 20 }} />\n                                </div>\n\n                            </div>\n                        </Box>\n                        <Box>\n                            <Skeleton variant=\"rectangular\" width={'100%'} height={300} sx={{ marginTop: '5%' }} />\n                        </Box>\n                    </div>\n\n                    : <div>\n                        <div className=\"header\">\n                            <Typography className=\"semiBold-22 header-style\">User Profile Details</Typography>\n                        </div>\n                        <div className=\"user_profile\">\n                            <div style={{ display: 'flex' }}>\n                                <Avatar sx={{ width: '120px', height: '120px' }} alt={userInfo.name} src={userInfo.profilePic} />\n                                <Box display={'grid'} gridTemplateColumns={'repeat(3, 1fr)'} sx={{ width: 1 }} >\n                                    {\n                                        popularity.map((info: any, index: number) => {\n                                            return <Box key={index} display={'flex'} alignItems={'center'} justifyContent={'center'} gridColumn={'span 1'}>\n                                                <Box sx={{\n                                                    width: 1,\n                                                    borderRight: index + 1 === popularity.length ? 'unset' : '0.5px solid rgba(142, 142, 142, 0.15)'\n                                                }} display={'flex'} flexDirection={'column'} alignItems={'center'}>\n                                                    <Typography className=\"popularity_count\">{info.value}</Typography>\n                                                    <Typography className=\"popularity_text\">{info.text}</Typography>\n                                                </Box>\n                                            </Box>\n                                        })\n                                    }\n                                </Box>\n                            </div>\n\n                            <Grid container direction={'column'} rowSpacing={1.5} rowGap={0.5}>\n                                <Grid item>\n                                    <Typography className=\"regular-22\">{userInfo.displayName ?? userInfo.name}</Typography>\n                                </Grid>\n                                {userInfo.displayLocationName ? <Grid alignItems={'center'} direction={'row'} style={{ display: 'flex' }}>\n                                    <LocationOnOutlinedIcon className=\"pin\" />\n                                    <Typography className=\"pin_name\">{userInfo.displayLocationName}</Typography>\n                                </Grid> : ''\n                                }\n\n                            </Grid>\n                            <Box sx={{ width: '100%' }}>\n                                <Grid container direction={'column'} rowGap={1.5}>\n                                    <Grid item xs>\n                                        <Typography className=\"pin_name\">{userInfo.status.text}</Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        {\n                                            userInfo.interests.map((interest: string, index: number) => {\n                                                return <Chip key={index} sx={{\n                                                    marginRight: 1.5,\n                                                    width: 'fit-content',\n                                                    background: 'var(--senary-color)',\n                                                    borderRadius: '5px',\n                                                    boxShadow: '2px 2px 4px 0px #00000033'\n                                                }} className=\"chip_text\" label={interest} />\n                                            })\n                                        }\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </div>\n                        <Grid container direction={'column'} sx={{ padding: '0 14px' }} rowGap={'10px'}>\n                            <Grid item>\n                                <Typography className=\"regular-22\">Other Details</Typography>\n                            </Grid>\n                            <Grid item width={'100px'} height={'1px'} bgcolor={'var(--tertiary-color)'}></Grid>\n                            <Grid container sx={{ width: 1 }} display={'grid'} direction={'row'} gridTemplateColumns={'repeat(3, 1fr)'}>\n                                {details.map((obj: any, index: number) => {\n                                    return <Box gridColumn={'span 1'}>\n                                        <Typography className=\"details_text\">{obj.text}:</Typography>\n                                        <Typography className=\"details_value\">{obj.value}</Typography>\n                                    </Box>\n                                })}\n                            </Grid>\n                        </Grid>\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default ProfileDetails","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgShape(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M11.1482 12.5568C9.98417 13.4286 8.53858 13.9449 6.97247 13.9449C3.12168 13.9449 0 10.8233 0 6.97247C0 3.12168 3.12168 0 6.97247 0C10.8233 0 13.9449 3.12168 13.9449 6.97247C13.9449 8.53858 13.4286 9.98418 12.5568 11.1482L17.7083 16.2996C18.0972 16.6886 18.0972 17.3193 17.7083 17.7083C17.3192 18.0972 16.6886 18.0972 16.2996 17.7083L11.1482 12.5568ZM11.9529 6.97247C11.9529 9.72301 9.72306 11.9528 6.97252 11.9528C4.22196 11.9528 1.99219 9.72301 1.99219 6.97247C1.99219 4.22191 4.22196 1.99213 6.97252 1.99213C9.72306 1.99213 11.9529 4.22191 11.9529 6.97247Z\",\n    fill: \"#8E8E8E\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgShape);\nexport default __webpack_public_path__ + \"static/media/Shape.f320bb928ce9f8611ee274981b708607.svg\";\nexport { ForwardRef as ReactComponent };","import './search-bar.scss';\nimport lensIcon from '../../../../assets/icons/Shape.svg'\nimport { useEffect, useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\n\ninterface SearchProps {\n    changeHandler: (value: string) => void;\n}\nconst SearchBar: React.FC<SearchProps> = ({ changeHandler }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    useEffect(() => {\n        const timeoutId = setTimeout(() => {\n            changeHandler(inputValue);\n        }, 1000);\n        return () => clearTimeout(timeoutId);\n    }, [inputValue, 1000]);\n\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(event.target.value);\n    }\n    \n    function iconClick(e: React.MouseEvent) {\n        setInputValue('');\n    }\n\n    \n    return (\n        <>\n            <div className='search'>\n                <input placeholder='Search' className='search-container' value={inputValue} onChange={onChangeHandler}></input>\n                <img className='lensIcon' src={lensIcon} />\n                <CloseIcon className='closeIcon' onClick={iconClick}/>\n            </div>\n        </>\n    );\n}\n\nexport default SearchBar;","import './report-list.scss';\nimport SearchBar from '../search-bar/search-bar';\nimport { ReportedList } from '../../../_models/report';\nimport { Avatar, Box, Skeleton } from '@mui/material';\nimport optionsIcon from '../../../../assets/icons/optionsIcon.svg'\nimport { useEffect, useState } from 'react';\n\ninterface ReportListProps {\n    onCellClick: (index: number) => void;\n    handleSearch: (value: string) => void;\n    userList: ReportedList[];\n    isLoading?: boolean;\n}\n\nconst ReportList: React.FC<ReportListProps> = ({ onCellClick, handleSearch, userList, isLoading }) => {\n    const [highlightItem, setHighlightItem] = useState<number | undefined>(0);\n\n    const onChangeHandler = (ev: string) => {\n        handleSearch(ev);\n    }\n\n    const listViewClick = (ev: React.MouseEvent, reportId: number) => {\n        onCellClick(reportId);\n        setHighlightItem(reportId);\n    }\n\n    useEffect(() => {\n        setHighlightItem(userList[0]?.id ?? undefined)\n    }, [userList])\n\n    return (\n        <>\n            {isLoading ?\n                <Box>\n                    <Skeleton animation='wave' style={{ height: 10 }} />\n                    <Skeleton animation='wave' />\n                    <Skeleton animation='wave' />\n                    <Skeleton animation={false} />\n                </Box>\n                :\n                <div className='report-list'>\n                    {<SearchBar changeHandler={onChangeHandler} />}\n                    {userList.map((report: any, index) => (\n                        <div className={`list-cell ${highlightItem === report.id ? 'highlight' : ''}`} key={index}>\n                            <div className='list-items' onClick={(e) => listViewClick(e, report.id)} >\n                                <div className='list-content'>\n                                    <Avatar className='report-list-profile' src={report.profile_pic}></Avatar>\n                                    <div className='query-container'>\n                                        <label className='regular-18 font-color'>{(report.display_name ?? report.name) + ' - #' + report.id}</label>\n                                        <label className='regular-14 lite-color'>{report.question}</label>\n                                    </div>\n                                </div>\n                                {/* <div>\n                                    <img src={optionsIcon} alt=\"options\" />\n                                </div> */}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            }\n        </>\n    );\n}\n\nexport default ReportList;\n\n\n\n","import { ReactNode } from 'react';\nimport './button.scss';\n\ninterface ButtonProps {\n    children: ReactNode\n    isDisabled?: boolean;\n    click: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nfunction Button(props: ButtonProps) {\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n        props.click(e);\n    }\n    return (\n        <>\n            <div className='button-container'>\n                <button className={`button-submit ${props.isDisabled ? 'inactive' : ''} medium-18`} disabled={props.isDisabled}\n                onClick={(e) => handleClick(e)}>\n                    {props.children}\n                </button>\n            </div>\n        </>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport './segment.scss';\nimport { SegmentModel } from '../../../_models/report';\n\ninterface SegmentProps {\n    segments: SegmentModel[];\n    onSegmentClick: (index: number) => void;\n}\n\nconst SegmentControl: React.FC<SegmentProps> = ({ onSegmentClick, segments }) => {\n    return (\n        <div className='segment-background'>\n            {segments.map((segment, index) => (\n                <button className={segment.isSelected ? 'segment-button' : 'segment-button-inactive'}\n                    key={index}\n                    onClick={() => onSegmentClick(index)}\n                >\n                    <div className={`${segment.isSelected ? 'segment-label' : 'segment-label-inactive'} semiBold-18 segment_color`}>{segment.name}</div>\n                    {/* <div className={`${segment.isSelected ? 'segment-count' : 'segment-count-inactive'} section-header`}>{segment.count ?? ''}</div> */}\n                </button>\n            ))}\n        </div>\n    );\n};\nexport default SegmentControl;","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLikes(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 12.3783C0 14.9824 1.62756 17.1642 3.80938 17.1642H5.35776C3.77418 16.0117 3.12317 14.2698 3.12317 12.2903C3.13196 10.0909 3.98533 8.51615 4.74193 7.56595H3.48386C1.52199 7.56595 0 9.67739 0 12.3783ZM4.33723 12.3079C4.33723 15.5191 6.84457 18 10.9355 18H12.132C13.2669 18 14.1114 17.9208 14.5865 17.7888C15.2727 17.6217 15.9326 17.1994 15.9326 16.3724C15.9326 16.0293 15.8446 15.7829 15.7389 15.5982C15.6686 15.4838 15.6862 15.3959 15.7918 15.3519C16.3372 15.1231 16.7859 14.6128 16.7859 13.9179C16.7859 13.522 16.6715 13.1701 16.478 12.9326C16.3812 12.8006 16.39 12.6774 16.5572 12.5894C16.9442 12.3607 17.2258 11.868 17.2258 11.2962C17.2258 10.8827 17.0938 10.4516 16.865 10.2404C16.7243 10.1173 16.7507 10.0293 16.8915 9.89735C17.1642 9.6686 17.3402 9.27274 17.3402 8.77125C17.3402 7.92668 16.6804 7.23166 15.8094 7.23166H12.7126C11.9296 7.23166 11.4105 6.82697 11.4105 6.17594C11.4105 5.00586 12.8797 2.84164 12.8797 1.29326C12.8797 0.475072 12.3519 0 11.6657 0C11.0322 0 10.7244 0.431085 10.39 1.0909C9.0792 3.63342 7.33723 5.69207 6.00879 7.4516C4.88269 8.94722 4.33723 10.2404 4.33723 12.3079Z\",\n    fill: \"#8E8E8E\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLikes);\nexport default __webpack_public_path__ + \"static/media/likes.ebdbc5b7a57cf7e2fe10949d9aeac151.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgComments(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 18,\n    viewBox: \"0 0 20 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.4187 18C4.45468 18 7.03597 16.869 8.50362 15.8159C8.65037 15.7122 8.77118 15.669 8.89208 15.669C9.00435 15.6777 9.11654 15.6863 9.22874 15.6863C15.4533 15.6863 19.5798 12.1468 19.5798 7.84745C19.5798 3.50503 15.2288 0 9.78995 0C4.35108 0 0 3.50503 0 7.84745C0 10.61 1.70072 13.036 4.47194 14.5208C4.60144 14.5899 4.64461 14.7194 4.57554 14.8489C4.09209 15.6432 3.22877 16.5928 2.90072 17.0245C2.56403 17.4561 2.75396 18 3.4187 18Z\",\n    fill: \"#8E8E8E\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgComments);\nexport default __webpack_public_path__ + \"static/media/comments.7831a647e54c88b0095d0dc5bcbf1323.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRepost(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 16,\n    viewBox: \"0 0 18 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.716629 7.79859C1.12131 7.79859 1.43326 7.48664 1.43326 7.08197V6.28104C1.43326 4.83092 2.41967 3.88666 3.94568 3.88666H10.5218V5.86792C10.5218 6.20516 10.7241 6.39907 11.0698 6.39907C11.2216 6.39907 11.3817 6.34006 11.4998 6.23888L14.6867 3.6C14.9565 3.3808 14.9733 3.03513 14.6867 2.79907L11.4998 0.151756C11.3817 0.0505859 11.2216 0 11.0698 0C10.7241 0 10.5218 0.185481 10.5218 0.531148V2.48713H4.08057C1.61031 2.48713 0 3.89509 0 6.17987V7.08197C0 7.48664 0.303513 7.79859 0.716629 7.79859ZM17.2834 7.20002C16.8703 7.20002 16.5667 7.50355 16.5667 7.91665V8.7176C16.5667 10.1677 15.5803 11.1035 14.0459 11.1035H7.46979V9.14754C7.46979 8.80185 7.2759 8.61638 6.93022 8.61638C6.77003 8.61638 6.61828 8.66703 6.49181 8.76818L3.30492 11.407C3.03513 11.6431 3.0267 11.9803 3.30492 12.208L6.49181 14.8553C6.61828 14.9564 6.77003 15.0155 6.93022 15.0155C7.2759 15.0155 7.46979 14.8215 7.46979 14.4843V12.5115H13.911C16.3897 12.5115 18 11.1035 18 8.81876V7.91665C18 7.50355 17.688 7.20002 17.2834 7.20002Z\",\n    fill: \"#8E8E8E\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRepost);\nexport default __webpack_public_path__ + \"static/media/repost.929672a6df48d5c1f197490fa2646282.svg\";\nexport { ForwardRef as ReactComponent };","export enum ReportStatus {\n    Active = 0,\n    Appealed = 1,\n    Completed = 2\n}\n\nexport enum PostFormat {\n    image = 'image',\n    video = 'video'\n}\n\nexport enum PostTypes {\n    social = 'social',\n    repost = 'repost'\n}\n\nexport enum requestType {\n    report = 1,\n    order = 2\n}","import React, { useEffect, useState } from 'react'\nimport '../image-previewer/image-previewer.scss';\nimport { Attachments, Post, initializeAttachments } from '../../../_models/report';\nimport arrow from '../../../../assets/icons/image_arrow.svg';\nimport { PostFormat } from '../../../enum/ReportEnum';\nimport PlayCircleOutlinedIcon from '@mui/icons-material/PlayCircleOutlined';\nimport { Tooltip } from '@mui/material';\nimport LocalOfferOutlinedIcon from '@mui/icons-material/LocalOfferOutlined';\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\nimport AudiotrackOutlinedIcon from '@mui/icons-material/AudiotrackOutlined';\nimport AppModelService from '../../../_service/app-model-service';\n\n\ninterface PropsForImagePreviewer {\n    attachments: Attachments[] | [];\n    click?: () => void;\n    taggedPeopleTap: (userId: number[]) => void;\n    post?: Post;\n}\n\nconst ImagePreviewer = (props: PropsForImagePreviewer) => {\n    const [currentIndex, setCurrentUser] = useState<number>(0);\n    const [side, setSide] = useState<number>(0);\n    const [postInfo, setPostInfo] = useState<Attachments[]>([\n        initializeAttachments\n    ]);\n    const [locationTooltip, setLocationTooltip] = useState<boolean>(false);\n    const [songTooltip, setSongTooltip] = useState<boolean>(false);\n\n    useEffect(() => {\n        setPostInfo(props.attachments);\n    }, [props.attachments])\n\n    const handleChange = (side: number) => {\n        setSide(side);\n        setCurrentUser(currentIndex + side);\n    }\n\n    const imageClick = () => {\n        if (props.click) {\n            setLocationTooltip(false);\n            setSongTooltip(false);\n            props.click();\n        }\n    }\n\n    function tagPeopleClick(params: number[]) {\n        setLocationTooltip(false);\n        setSongTooltip(false);\n        props.taggedPeopleTap(params);\n    }\n\n    function locationToolTipTapped() {\n        setLocationTooltip((prev) => !prev);\n        setSongTooltip(false);\n    }\n\n    function songToolTipTapped() {\n        setSongTooltip((prev) => !prev);\n        setLocationTooltip(false);\n    }\n\n    return (\n        <>\n            <div className='image_preview_container'>\n                {\n                    postInfo?.length ? postInfo.map((source: Attachments, index: number, originalArray: Attachments[]) => {\n                        return index === currentIndex && source.url &&\n                            <div className='main' key={index}>\n                                {\n                                    originalArray.length > 1 && index !== 0 && (\n                                        <div className='left_arrow' onClick={(ev) => handleChange(-1)}>\n                                            <img className='arrow_icon' src={arrow} alt=\"arrow\" />\n                                        </div>\n                                    )\n                                }\n\n                                <img onClick={() => imageClick()}\n                                    className={`${side === 1 ? 'forward' : side === -1 ? 'backward' : 0} source_container`}\n                                    key={index}\n                                    src={originalArray.at(currentIndex)?.type === PostFormat.image ? originalArray.at(currentIndex)?.url : originalArray.at(currentIndex)?.thumbnailUrl}\n                                    alt=\"Post image not found\"\n                                />\n\n                                {\n                                    originalArray.at(currentIndex)?.type === PostFormat.video ?\n                                        <div onClick={() => imageClick()}>\n                                            <Tooltip title='Click to play video'>\n                                                <PlayCircleOutlinedIcon className='play_icon' />\n                                            </Tooltip>\n                                        </div>\n\n                                        : ''\n                                }\n\n                                {\n                                    originalArray.length > 1 && index < originalArray.length - 1 ? (\n                                        <div className='right_arrow' onClick={(e) => handleChange(1)}>\n                                            <img className='arrow_icon' src={arrow} alt=\"arrow\" />\n                                        </div>\n                                    ) : ''\n                                }\n                                <div className='actions-main-container'>\n                                    {\n                                        props.post?.taggedPeople &&\n                                        <div className='tag-container' onClick={() => tagPeopleClick([206, 69, 67])}>\n                                            <LocalOfferOutlinedIcon />\n                                        </div>\n                                    }\n\n                                    {\n                                        props.post?.taggedLocation &&\n                                        <div className='location-container' onClick={locationToolTipTapped}>\n                                            <Tooltip\n                                                PopperProps={{\n                                                    disablePortal: true,\n                                                }}\n                                                onClose={() => setLocationTooltip(false)}\n                                                open={locationTooltip}\n                                                disableFocusListener\n                                                disableHoverListener\n                                                disableTouchListener\n                                                title={props.post?.taggedLocation.mainText}\n                                            >\n                                                <LocationOnOutlinedIcon />\n                                            </Tooltip>\n                                        </div>\n                                    }\n\n                                    {\n                                        props.post?.previewSong &&\n                                        <div className='song-container' onClick={songToolTipTapped}>\n                                            <Tooltip\n                                                PopperProps={{\n                                                    disablePortal: true,\n                                                }}\n                                                onClose={() => setSongTooltip(false)}\n                                                open={songTooltip}\n                                                disableFocusListener\n                                                disableHoverListener\n                                                disableTouchListener\n                                                title={props.post.previewSong.name}\n                                            >\n                                                <AudiotrackOutlinedIcon />\n                                            </Tooltip>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                    }) : ''\n                }\n            </div>\n        </>\n    )\n}\n\nexport default ImagePreviewer\n","import React, { useEffect, useMemo, useState } from 'react';\nimport './comments-viewer.scss'\nimport UserService from '../../../_service/user-api';\nimport { Logger } from '../../../_core/logger.service';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/root-reducer';\nimport { getCommentsForPost } from '../../../redux/feature/flagged-report-slice';\nimport { Avatar, Typography } from '@mui/material';\nimport { Comments, InitialComments } from '../../../_models/report';\nimport likes from '../../../../assets/icons/likes.svg';\nimport { RootReducer } from '../../../_models/roo-reducer-model';\n\nconst logger = new Logger();\n\ninterface PropsForComments {\n  postId: number;\n}\n\nconst CommentsViewer = (props: PropsForComments) => {\n  const [count, setCount] = useState(0);\n  // const detailedObj: any = useSelector((state: RootReducer) => state.flaggedReport.data);\n  // const comments = useSelector((state: any) => state.flaggedReport.commentsDetails);\n  // const dispatch = useDispatch();\n  // const { post } = detailedObj;\n  const [comments, setComments] = useState<Comments[]>([InitialComments])\n\n  // useMemo(() => {\n  //   UserService.getCommentsByPostId(post.id)\n  //     .then((res) => {\n  //       dispatch(getCommentsForPost(res))\n  //     })\n  //     .catch(err => logger.error(err))\n  // }, [post.id])\n\n  useEffect(() => {\n    fetchComments(props.postId);\n  }, [props.postId])\n\n  function fetchComments(postId: number) {\n    UserService.getCommentsByPostId(postId)\n      .then((res: any) => {\n        setComments(res);\n        const cCount = countTotalObjects(comments);\n        setCount(cCount);\n      })\n      .catch((err) => {\n        logger.error(err);\n      })\n  }\n\n  const countTotalObjects = (comments: Comments[]) => {\n    let count = comments.length; // Count the current level objects\n    if (comments && comments.length) {\n      comments?.forEach((comment: Comments) => {\n        if (comment.children && comment.children.length > 0) {\n          count += countTotalObjects(comment.children); // Recursively count nested objects\n        }\n      });\n    }\n    return count;\n  }\n\n  return (\n    <>\n      {comments.length ? comments.map((comment: Comments, index: number) => {\n        return <div key={index}>\n          {commentsThread(comment, index)}\n        </div>\n      }) : ''}\n    </>\n  )\n}\n\nconst commentsThread: any = (comments: Comments, index: number) => {\n  return (\n    <>\n      <div className='comment_container' key={index}>\n        <div style={{ marginLeft: `${(comments.level - 1) * 50}px` }} className='info_pic'>\n          <Avatar alt={comments.name} src={comments.profilePic} />\n          <div className='info_text_comment'>\n            <Typography className='semiBold-16 comment_user_name'>{comments.display_name ?? comments.name}</Typography>\n            <Typography className='regular-16'>{comments.content}</Typography>\n            <div className='likes'>\n              <Avatar sx={{ width: '13px', height: '13px', marginTop: '-4px' }} alt='likes' src={likes}></Avatar>\n              <Typography className='regular-14 likes_info'>0 Likes</Typography>\n            </div>\n          </div>\n        </div>\n        {\n          comments.children?.map((el: Comments, index: number) => {\n            return <div key={index}>\n              {commentsThread(el, index)}\n            </div>\n          })\n        }\n      </div>\n    </>\n  )\n}\n\nexport default CommentsViewer\n","export enum DataTypes {\n    object = 'object'\n}","import { Avatar, Box, Grid, Typography } from '@mui/material';\nimport { Post } from '../../../_models/report';\nimport CloseIcon from '@mui/icons-material/Close';\nimport './post-detailed-view.scss';\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\nimport ImagePreviewer from '../image-previewer/image-Previewer';\nimport likes from '../../../../assets/icons/likes.svg';\nimport comments from '../../../../assets/icons/comments.svg';\nimport shares from '../../../../assets/icons/repost.svg';\nimport CommentsViewer from '../comments-viewer/comments-viewer';\nimport AppModelService from '../../../_service/app-model-service';\n\n\ninterface PropsForPostDetail {\n    post: Post\n}\n\ninterface PostInfo {\n    key: string;\n    text: string;\n    source: string;\n}\n\nconst postInfo: Array<PostInfo> = [\n    { key: 'likes', text: 'likes', source: likes },\n    { key: 'comments', text: 'comments', source: comments },\n    { key: 'shares', text: 'repost', source: shares }\n];\n\n\nconst PostDetailedView = (props: PropsForPostDetail) => {\n    const { post } = props;\n\n    function closePopup() {\n        AppModelService.closePopUp();\n    }\n\n    function getPeople(userId: number[]) {\n\n    }\n\n    return (\n        <>\n            <Grid container sx={{ width: 1, height: 1 }} className='repost_preview'>\n\n                {/* Header */}\n                <Grid item className='header_view'>\n                    <Box display={\"flex\"} alignItems={\"center\"} gap={'10px'}>\n                        <Box>\n                            <Avatar src={post.user.profilePic}></Avatar>\n                        </Box>\n                        <Box>\n                            <Typography className='medium-18'>{post.user.displayName ?? post.user.name}</Typography>\n                            <Box display={\"flex\"} alignItems={\"center\"} gap={'10px'}>\n                                <LocationOnOutlinedIcon className=\"pin\" />\n                                <Typography className='location_text'>{post.user.displayLocationName}</Typography>\n                            </Box>\n                        </Box>\n                    </Box>\n                    <Box onClick={closePopup}>\n                        <CloseIcon className=\"cross_icon\" />\n                    </Box>\n                </Grid>\n\n                {/* Container */}\n                <Grid container className=\"attachments\" columnSpacing={'10px'} columns={12}>\n                    <Grid item xs={6} className='right_view'>\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: '10px', position: \"relative\" }}>\n                            <Box sx={{ display: \"flex\", \n                                    gap: '10px', \n                                    paddingTop: '10px', \n                                    flexDirection: \"column\", \n                                    position: \"sticky\", \n                                    top: 0, \n                                    background: \"var(--quaternary-color)\", \n                                    zIndex: 99,\n                                    paddingBottom: '10px',\n                                    borderBottom: \"solid 1px var(--line-border-color)\"}}>\n                                <Typography className='regular-16 font-color'>{post.name}</Typography>\n                                {\n                                    post ?\n                                        <Box sx={{ display: \"flex\", gap: 1 }}> {\n                                            postInfo.map((info: PostInfo, index: number) => (\n                                                <div key={index} className='info' >\n                                                    <img src={info.source} alt={info.text} />\n                                                    <p className='regular-16 count'>{`12`} {info.text}</p>\n                                                </div>))}\n                                        </Box> : ''\n                                }\n                            </Box>\n                            <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: '10px' }}>\n                                <CommentsViewer postId={post.id} />\n                            </Box>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={6} className='grid_2'>\n                        <ImagePreviewer attachments={post.attachments} taggedPeopleTap={(params) => getPeople(params)}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default PostDetailedView","import './report-view.scss';\nimport likes from '../../../../assets/icons/likes.svg';\nimport comments from '../../../../assets/icons/comments.svg';\nimport shares from '../../../../assets/icons/repost.svg';\nimport arrow from '../../../../assets/icons/arrow.svg';\nimport smiley from '../../../../assets/icons/smiley.svg';\nimport three_dots from '../../../../assets/icons/three_dots.svg';\nimport { ChangeEvent, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/root-reducer';\nimport { getReportDetail } from '../../../redux/feature/flagged-report-slice';\nimport { Attachments, Post, PreviewSong, SegmentModel } from '../../../_models/report';\nimport { Query } from '../../../_models/user';\nimport { Avatar, Box, Card, FormControl, FormControlLabel, Grid, Popover, Popper, Radio, RadioGroup, Typography } from '@mui/material';\nimport ImagePreviewer from '../image-previewer/image-Previewer';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport CommentsViewer from '../comments-viewer/comments-viewer';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport AppModelService from '../../../_service/app-model-service';\nimport ProfileDetails from '../app-profile-details/profile-details';\nimport PopoverComponent, { Options } from '../app-popover/popover-component';\nimport AppPreviewModelService from '../../../_service/app-preview-model-service';\nimport { Navigate } from 'react-router';\nimport { DataTypes } from '../../../enum/data-types';\nimport { PostTypes, ReportStatus } from '../../../enum/ReportEnum';\nimport PostDetailedView from '../app-post-detailed-view/post-detailed-view';\nimport { RootReducer } from '../../../_models/roo-reducer-model';\n\nconst postInfo = [\n    { key: 'likes', text: 'likes', source: likes },\n    { key: 'comments', text: 'comments', source: comments },\n    { key: 'shares', text: 'repost', source: shares }\n];\n\nconst configData = [{ id: 1, text: 'View profile' }, { id: 2, text: 'Chat' }]\n\ninterface viewProps {\n    onChangeOption: (query: Query) => void;\n    warningElementChange: (value: string) => void;\n    isRendered: boolean;\n    taggedPeopleTap: (userId: number[]) => void;\n    currentTab: SegmentModel\n}\n\nconst ReportView = (props: viewProps) => {\n    const [selectedOption, setSelectedOption] = useState('');\n    const [inputValue, setInputValue] = useState('');\n    const detailedObj: any = useSelector((state: RootReducer) => state.flaggedReport.data);\n    const { user, query, post, actionList, response, attachments, detail } = detailedObj;\n    const [pAnchorEl, setpAnchorEl] = useState<EventTarget | any>(null);\n    const [popoverOpen, setPopoverOpen] = useState(false);\n\n    useEffect(() => {\n        if (props.isRendered) {\n            setSelectedOption('');\n            props.warningElementChange('');\n            setInputValue('');\n        }\n    }, [props.isRendered])\n\n    const labelClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSelectedOption(event.target.value);\n        props.onChangeOption(actionList[parseInt(event.target.value)]);\n        setInputValue('');\n    }\n\n    const onChangeinput = (event: ChangeEvent<HTMLTextAreaElement>) => {\n        props.warningElementChange(event.target.value?.trim());\n        setInputValue(event.target.value);\n    }\n\n    const openAction = (event: React.MouseEvent<HTMLElement>) => {\n        setPopoverOpen(true);\n        setpAnchorEl(event.currentTarget);\n    }\n\n    const closePopover = () => {\n        setPopoverOpen(false);\n    }\n\n    const selectedData = (ev: Options) => {\n        AppModelService.createPopUp({\n            compoent: <ProfileDetails id={user.id} />,\n            headerName: '',\n            header: false,\n            footer: false,\n            width: 580,\n            height: 560,\n            class: 'main_content',\n            showCloseIcon: true\n        })\n    }\n\n    const closePreviewPopover = () => {\n        console.log(\"Preview popup closed..!\");\n    }\n\n    const imageClick = (attachments: Attachments[], previewSong: PreviewSong | null) => {\n        AppPreviewModelService.createPreviewPopUp({\n            headerName: \"\",\n            attachments: attachments,\n            previewSong: previewSong\n        }, closePreviewPopover);\n    }\n\n    const showRepostDetail = (postInfo: Post) => {\n        AppModelService.createPopUp({\n            compoent: <PostDetailedView post={postInfo} />,\n            width: 1020,\n            height: 560,\n            header: false,\n            headerName: '',\n            footer: false,\n            class: 'main_content no_padding',\n            showCloseIcon: false\n        });\n    }\n    const taggedPeopleTapped = (params: number[]) => {\n        props.taggedPeopleTap(params);\n    }\n\n    function showPreviewPopup(attachments: Attachments[]) {\n        AppPreviewModelService.createPreviewPopUp({\n            headerName: \"\",\n            attachments: attachments,\n        });\n    }\n\n    return (\n        <>\n            <div className='reportView'>\n                <div className='postContent'>\n                    <div className='profile'>\n                        <div className='detail'>\n                            {/* <img className='profileIcon' src={user.profilePic} alt={user?.name} /> */}\n                            <Avatar className='profileIcon' src={user.profilePic} alt={user?.name}></Avatar>\n                            <p className='name regular-18'>{user?.name}</p>\n                        </div>\n                        <div onClick={(e) => openAction(e)}>\n                            <MoreVertIcon className='three_dots' />\n                        </div>\n                    </div>\n                    <div className='postCell'>\n                        <div className='report_detail_container'>\n                            <p className='option regular-18'>\n                                <span className='primary_text_color'>Query: </span>\n                                <span className='quinary_text_color'>{query.question}</span>\n                            </p>\n                            {\n                                detail &&\n                                <div>\n                                    <label>\n                                        <span className='primary_text_color'>Description: </span>\n                                        <span className='quinary_text_color'>{detail}</span>\n                                    </label>\n                                </div>\n                            }\n                            {\n                                attachments &&\n                                <div>\n                                    <label className='attachment_label' onClick={() => showPreviewPopup(attachments)}>Show Attachments</label>\n                                </div>\n                            }\n                        </div>\n                        <div className='source'>\n                            <div className='owner-profile'>\n                                {/* <img width={'30px'} height={'30px'} src={post.user?.profilePic} alt={post.user?.displayName ?? post.user?.name} /> */}\n                                <Avatar sx={{ width: 30, height: 30 }} src={post.user?.profilePic} alt={post.user?.displayName ?? post.user?.name}></Avatar>\n                                <p className='medium-18 font-color'>{post.user?.displayName ?? post.user?.name}</p>\n                            </div>\n                            {\n                                typeof (post) === DataTypes.object ? (\n                                    <div className={`${post.type === PostTypes.social ? 'not_card' : 'card_height'} post-image`}>\n                                        <Card variant=\"elevation\" className={`${post.type === PostTypes.social ? 'not_a_card' : 'card'}`}>\n                                            {\n                                                post.type === PostTypes.repost ?\n                                                    <Grid container direction={\"row\"} justifyContent={\"space-between\"} alignItems={\"center\"} padding={'15px 15px 10px 25px'}>\n                                                        <Grid item display={\"flex\"} flexDirection={\"row\"} alignItems={\"center\"} columnGap={\"10px\"}>\n                                                            <Avatar sx={{ width: 30, height: 30 }} src={post.data?.user?.profilePic}></Avatar>\n                                                            <Typography className='medium-18'>{post.data?.user?.displayName ?? post.data?.user?.name}</Typography>\n                                                        </Grid>\n                                                        <Grid item>\n                                                            <span onClick={() => showRepostDetail(post.data)} >\n                                                                <Typography className='medium-18 link_text'>show post</Typography>\n                                                            </span>\n                                                        </Grid>\n                                                    </Grid> : ''\n                                            }\n                                            {post.attachments?.length || post.data?.attachments?.length ?\n                                                <ImagePreviewer\n                                                    click={() => imageClick(post.attachments.length ? post.attachments : post.data?.attachments, post.previewSong ?? post.data?.previewSong ?? null)}\n                                                    taggedPeopleTap={(params) => taggedPeopleTapped(params)}\n                                                    attachments={post.attachments.length ? post.attachments : post.data?.attachments}\n                                                    post={post}\n                                                />\n                                                : ''}\n                                        </Card>\n                                        <div className='details'>\n                                            <div className='sticky_content'>\n                                                <div className='thoughts'>\n                                                    <p className='regular-18 font-color'>\n                                                        {post.name}\n                                                    </p>\n                                                </div>\n                                                <div className='post-info'>\n                                                    {\n                                                        post.attachments?.length || post.data ?\n                                                            postInfo.map((info: any, index: number) => (\n                                                                <div className='info' key={index}>\n                                                                    <img src={info.source} alt={info.text} />\n                                                                    <p className='regular-16 count'>{`${detailedObj[info.key]} ${info.text}`}</p>\n                                                                </div>\n                                                            ))\n                                                            : ''\n                                                    }\n\n                                                </div>\n                                            </div>\n                                            {/* <div className='justify-center'>\n                                                <p className='semiBold-18 name' style={{ textAlign: 'center', cursor: 'pointer' }}>Show post detail</p>\n                                            </div> */}\n                                            {post.name && <div className='comments_viewer_flag'>\n                                                <CommentsViewer postId={post.id} />\n                                            </div>}\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <div className='error_text'>\n                                        <p className='regular-16 info_text'>Post Information not found</p>\n                                        <ErrorOutlineIcon />\n                                    </div>\n\n                                )\n                            }\n\n                        </div>\n\n                    </div>\n                </div>\n                <div className='action'>\n                    {\n                        props.currentTab.status !== ReportStatus.Active ?\n                            <>\n                                <Box display={\"flex\"} gap={\"10px\"} alignItems={\"center\"} marginBottom={'15px'}>\n                                    <Typography className='medium-16 font-color'>Action taken :</Typography>\n                                    <Typography className='regular-16 font-color'>{response?.action}</Typography>\n                                </Box>\n                                {response?.comments ?\n                                    <Box display={\"flex\"} gap={\"10px\"} alignItems={\"center\"}>\n                                        <Typography className='medium-16 font-color'>Warning:</Typography>\n                                        <Typography className='regular-16 font-color'>{response?.comments}</Typography>\n                                    </Box> : ''\n                                }\n                            </> : ''\n                    }\n                    {\n                        props.currentTab.status !== ReportStatus.Completed ?\n                            <p className='label semiBold-18'>Take action : </p> : ''\n                    }\n                    {   \n                        props.currentTab.status !== ReportStatus.Completed ?\n                        <div className='action-option'>\n                            <FormControl>\n                                <RadioGroup aria-labelledby=\"Report actions\"\n                                    name=\"radio-buttons-group\" value={selectedOption?.toString()}\n                                    onChange={labelClick}>\n                                    {\n                                        actionList?.length ?\n                                            actionList.map((option: any, index: number) => (\n                                                <FormControlLabel className='radio' key={index} value={index.toString()} control={<Radio />}\n                                                    label={option.question}></FormControlLabel>\n                                            )) :\n                                            <Typography className='regular-16'>\n                                                {actionList?.question}\n                                            </Typography>\n                                    }\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        : ''\n                    }\n                    <div className='warning-input'>\n                        {\n                            selectedOption === '1' ?\n                                <div>\n                                    <p className='input-label semiBold-18 font-color'>Issue warning to the post owner: </p>\n                                    <div className='input-container'>\n                                        <textarea placeholder='Provide valid information...' className='inputBox' name=\"input\"\n                                            value={inputValue} onChange={onChangeinput}></textarea>\n                                        <img className='smiley' src={smiley} alt=\"smiley\" />\n                                        <img src={arrow} alt=\"arrow\" />\n                                    </div>\n                                </div>\n                                : ''\n                        }\n                    </div>\n                </div>\n            </div>\n            <PopoverComponent open={popoverOpen} anchorEl={pAnchorEl} closePopover={closePopover} configData={configData} selectedData={selectedData} />\n        </>\n    )\n}\n\nexport default ReportView;\n","import { User } from \"../../../_models/user\";\nimport '../../components/user-profile-card/user-profile-card.scss';\n\ninterface UserProfileCard {\n    userList: User[]\n}\n\nconst UserProfileCard: React.FC<UserProfileCard> = ({ userList }) => {\n    return (\n        <>\n            {\n                userList?.map((item, index) => (\n                    <div key={index} className='list-items'>\n                        <div className='list-content'>\n                            <img className='user-list-profile' src={item.profilePic}></img>\n                            <div className=\"query-container\">\n                                <label className='regular-18 font-color'>{item.displayName ?? item.displayName}</label>\n                            </div>\n                        </div>\n                    </div>\n                ))\n            }\n        </>\n    );\n}\n\nexport default UserProfileCard;\n","import Button from \"../../_shared/components/button/button\";\nimport SegmentControl from \"../../_shared/components/segment/segment\";\nimport ReportList from '../../_shared/components/report-list/report-list';\nimport '../report/flagged-report.scss';\nimport ReportView from '../../_shared/components/report-view/report-view';\nimport { ReportAttachments, SegmentModel, ReportDetail, ReportedList } from \"../../_models/report\";\nimport UserService from \"../../_service/user-api\";\nimport { ReportStatus, requestType } from \"../../enum/ReportEnum\"\nimport { Logger } from \"../../_core/logger.service\";\nimport React, { Component } from \"react\";\nimport AppLoaderService from \"../../_service/app-loader-service\";\nimport { reportDetails } from \"../../redux/feature/flagged-report-slice\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../redux/root-reducer\";\nimport { Query, User } from \"../../_models/user\";\nimport AppToasterService from \"../../_service/app-alert-service\";\nimport { Message } from \"../../_core/constant\";\nimport AppModelService from \"../../_service/app-model-service\";\nimport UserProfileCard from \"../../_shared/components/user-profile-card/user-profile-card\";\n\n\nconst logger = new Logger();\n\ninterface reportState {\n    segmentData: SegmentModel[];\n    userList: ReportedList[];\n    isLoading: boolean;\n    currentTab: SegmentModel;\n    isDisabledSubmit: boolean;\n    selectedReport: number;\n    selectedQuery: string;\n    isRendered: boolean;\n    showReport: boolean;\n}\n\n// type PropsFromRedux = ConnectedProps<typeof connector>;\n\ninterface PropsFromRedux {\n    reportDetail: ReportDetail\n    reportDetails: (res: any) => void;\n}\n\nexport class FlaggedReport extends Component<PropsFromRedux, reportState> {\n    commentsText: string = '';\n    constructor(props: PropsFromRedux) {\n        super(props);\n        this.state = {\n            segmentData: [\n                { name: 'Active requests', status: ReportStatus.Active, isSelected: true },\n                { name: 'Appealed', status: ReportStatus.Appealed, isSelected: false },\n                { name: 'Completed', status: ReportStatus.Completed, isSelected: false }\n            ],\n            userList: [],\n            isLoading: false,\n            currentTab: { name: 'Active requests', status: ReportStatus.Active, isSelected: true },\n            isDisabledSubmit: true,\n            selectedReport: 0,\n            selectedQuery: '',\n            isRendered: false,\n            showReport: true\n        }\n        this.submitReport = this.submitReport.bind(this);\n        this.handleCellClick = this.handleCellClick.bind(this);\n        this.reportWarningChange = this.reportWarningChange.bind(this);\n        this.callLoader = this.callLoader.bind(this);\n    }\n\n    callLoader() {\n        this.setState({ isLoading: true });\n        setTimeout(() => {\n            this.setState({ isLoading: false })\n        }, 500);\n    }\n\n    componentDidMount() {\n        this.fetchRequestList();\n    };\n\n    fetchRequestList(searchTerm?: string, status = this.state.currentTab.status) {\n        AppLoaderService.showLoader(true);\n        const type = requestType.report;\n        UserService.getReportList(status, type, searchTerm)\n            .then((res: any) => {\n                this.setState(prevState => ({\n                    ...prevState,\n                    userList: res.result,\n                    showReport: res && res.result?.length\n                }), () => {\n                    if (res && res.result?.length) this.fetchReport(res.result[0]?.id);\n                    AppLoaderService.showLoader(false);\n                });\n            })\n            .catch((err: any) => {\n                logger.debug(err);\n                AppLoaderService.showLoader(false);\n            })\n    }\n\n    handleCellClick = async (reportId: number) => {\n        AppLoaderService.showLoader(true);\n        this.fetchReport(reportId);\n        this.setState({ isRendered: false });\n    };\n\n    fetchReport(reportId: number) {\n        UserService.fetchDetailsByReportId(reportId)\n            .then((res) => {\n                this.props.reportDetails(res);\n                this.setState(({\n                    selectedReport: reportId,\n                    isRendered: true,\n                    isDisabledSubmit: true\n                }));\n            })\n            .catch((err: any) => {\n                logger.debug(err);\n            })\n            .finally(() => {\n                AppLoaderService.showLoader(false);\n            })\n    }\n\n    segmentSelected(i: number) {\n        this.setState(prevState => ({\n            segmentData: prevState.segmentData.map((obj: any, index: number) => ({\n                ...obj, isSelected: i === index\n            })),\n            currentTab: prevState.segmentData[i],\n            isRendered: false\n        }), () => {\n            this.fetchRequestList();\n        })\n    }\n\n    onSearch(value: string) {\n        this.fetchRequestList(value)\n    }\n\n    handleOptionChange(e: Query) {\n        this.setState((prevState: reportState) => ({\n            isDisabledSubmit: false,\n            selectedQuery: e.question,\n        }), () => {\n        })\n        this.commentsText = '';\n    }\n\n    reportWarningChange(ev: string) {\n        this.commentsText = ev;\n    }\n\n    saveReport(reportId: number, attachments: ReportAttachments) {\n        AppLoaderService.showLoader(true);\n        UserService.saveReport(reportId, attachments)\n            .then(() => {\n                AppToasterService.showToaster({\n                    message: Message.successFully,\n                    severity: 'success'\n                });\n                this.setState({ isRendered: false });\n                this.fetchRequestList();\n            })\n            .catch((err) => {\n                logger.error(err)\n            })\n            .finally(() => {\n                AppLoaderService.showLoader(false);\n            })\n    }\n\n    submitReport(e: React.MouseEvent<HTMLButtonElement>) {\n        e.preventDefault();\n        this.saveReport(this.state.selectedReport, { action: this.state.selectedQuery, comments: this.commentsText });\n    }\n\n    getUsersWithId(params: number[]) {\n        AppLoaderService.showLoader(true);\n        UserService.getUserList(params).then((res: any) => {\n            this.showTagPeoplePopUp(res);\n            AppLoaderService.showLoader(false);\n        }).catch((error) => {\n            AppLoaderService.showLoader(false);\n            logger.info(error);\n        });\n    }\n\n    showTagPeoplePopUp(userList: User[]) {\n        AppModelService.createPopUp({\n            headerName: 'Tagged in the post',\n            header: true,\n            footer: false,\n            width: 700,\n            height: 560,\n            compoent: <UserProfileCard userList={userList} />,\n            class: 'dialouge-content-container',\n            showCloseIcon: false\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <div className='report-layout'>\n                    <div className=\"justify-spacebetween\">\n                        <div className='width-50'>\n                            {<SegmentControl segments={this.state.segmentData} onSegmentClick={(i) => this.segmentSelected(i)} />}\n                        </div>\n                        {\n                        (this.state.currentTab.status != ReportStatus.Completed) && \n                            <div className='width-50'>\n                                <Button click={this.submitReport} isDisabled={this.state.isDisabledSubmit}>Submit</Button>\n                            </div>\n                        }\n                    </div>\n                    <div className='content'>\n                        {\n                            <ReportList\n                                handleSearch={(e) => this.onSearch(e)}\n                                userList={this.state.userList}\n                                onCellClick={(e) => this.handleCellClick(e)}\n                                isLoading={this.state.isLoading}\n                            />\n                        }\n                        {\n                            this.state.showReport ?  \n                            <ReportView\n                                isRendered={this.state.isRendered}\n                                onChangeOption={(e) => this.handleOptionChange(e)}\n                                warningElementChange={this.reportWarningChange}\n                                taggedPeopleTap={(params) => this.getUsersWithId(params)}\n                                currentTab={this.state.currentTab}\n                            /> : ''\n                        }\n                    </div>\n                </div>\n\n            </>\n        )\n    }\n}\n\n\nconst mapState = (state: RootState) => ({\n    reportDetail: state.data\n})\n\nconst mapDispatch = {\n    reportDetails,\n};\n\nexport default connect(mapState, mapDispatch)(FlaggedReport);\n"],"names":["getUser","http","get","getReportList","status","type","searchTerm","params","fetchDetailsByReportId","reportId","url","replace","toString","saveReport","attachment","attachments","action","comments","put","getCommentsByPostId","postId","getUserById","userId","getUserList","payload","post","_ref","open","anchorEl","closePopover","configData","selectedData","menuOption","setMenuOption","useState","id","text","useEffect","_jsx","Popover","onClose","anchorOrigin","vertical","horizontal","classes","paper","children","className","map","option","index","onClick","handleItemClick","logger","Logger","popularity","value","details","props","_userInfo$displayName","userInfo","setUserInfo","displayName","name","interests","profilePic","displayLocationName","isLoading","setIsLoading","async","res","UserService","userDetails","err","error","message","fetchData","_Fragment","_jsxs","Box","Skeleton","animation","style","height","display","marginTop","variant","width","marginLeft","alignContent","flexGrow","sx","Typography","Avatar","alt","src","gridTemplateColumns","info","alignItems","justifyContent","gridColumn","borderRight","length","flexDirection","Grid","container","direction","rowSpacing","rowGap","item","LocationOnOutlinedIcon","xs","interest","Chip","marginRight","background","borderRadius","boxShadow","label","padding","bgcolor","obj","changeHandler","inputValue","setInputValue","timeoutId","setTimeout","clearTimeout","placeholder","onChange","event","target","lensIcon","CloseIcon","e","onCellClick","handleSearch","userList","highlightItem","setHighlightItem","_userList$0$id","_userList$","undefined","SearchBar","ev","report","_report$display_name","concat","listViewClick","profile_pic","display_name","question","isDisabled","disabled","click","handleClick","onSegmentClick","segments","segment","isSelected","ReportStatus","PostFormat","PostTypes","requestType","currentIndex","setCurrentUser","side","setSide","postInfo","setPostInfo","initializeAttachments","locationTooltip","setLocationTooltip","songTooltip","setSongTooltip","handleChange","imageClick","locationToolTipTapped","prev","songToolTipTapped","source","originalArray","_originalArray$at","_originalArray$at2","_originalArray$at3","_originalArray$at4","_props$post","_props$post2","_props$post3","_props$post4","arrow","at","image","thumbnailUrl","video","Tooltip","title","PlayCircleOutlinedIcon","taggedPeople","tagPeopleClick","taggedPeopleTap","LocalOfferOutlinedIcon","taggedLocation","PopperProps","disablePortal","disableFocusListener","disableHoverListener","disableTouchListener","mainText","previewSong","AudiotrackOutlinedIcon","commentsThread","_comments$display_nam","_comments$children","level","content","likes","el","count","setCount","setComments","InitialComments","then","cCount","countTotalObjects","catch","forEach","comment","DataTypes","key","shares","_post$user$displayNam","gap","user","AppModelService","closePopUp","columnSpacing","columns","position","paddingTop","top","zIndex","paddingBottom","borderBottom","CommentsViewer","ImagePreviewer","_post$user","_post$user2","_post$user3","_post$user$displayNam2","_post$user4","_post$user5","_post$data","_post$data$user","_post$data$user$displ","_post$data2","_post$data2$user","_post$data3","_post$data3$user","_post$attachments","_post$data4","_post$data4$attachmen","_post$data7","_post$attachments2","selectedOption","setSelectedOption","detailedObj","useSelector","state","flaggedReport","data","query","actionList","response","detail","pAnchorEl","setpAnchorEl","popoverOpen","setPopoverOpen","isRendered","warningElementChange","closePreviewPopover","console","log","openAction","currentTarget","MoreVertIcon","AppPreviewModelService","createPreviewPopUp","headerName","showPreviewPopup","object","social","Card","repost","columnGap","createPopUp","compoent","PostDetailedView","header","footer","class","showCloseIcon","showRepostDetail","_post$data5","_post$previewSong","_post$data6","taggedPeopleTapped","ErrorOutlineIcon","currentTab","Active","marginBottom","Completed","FormControl","RadioGroup","onChangeOption","parseInt","FormControlLabel","control","Radio","_event$target$value","trim","smiley","PopoverComponent","ProfileDetails","_item$displayName","FlaggedReport","Component","constructor","super","commentsText","handleCellClick","AppLoaderService","showLoader","this","fetchReport","setState","segmentData","Appealed","isDisabledSubmit","selectedReport","selectedQuery","showReport","submitReport","bind","reportWarningChange","callLoader","componentDidMount","fetchRequestList","arguments","prevState","_res$result","result","_res$result2","_res$result$","debug","reportDetails","finally","segmentSelected","i","onSearch","handleOptionChange","AppToasterService","showToaster","Message","successFully","severity","preventDefault","getUsersWithId","showTagPeoplePopUp","UserProfileCard","render","SegmentControl","Button","ReportList","ReportView","mapDispatch","connect","reportDetail"],"sourceRoot":""}